package com.practical.attendanceresult;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.dbcon.Conn;

@WebServlet("/semPracticalAttendance")
public class SemPracticalAttendance extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public SemPracticalAttendance() {
		super();
		// TODO Auto-generated constructor stub
	}

	protected void service(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// System.out.println("sempractical attendance");

		ResultSet rs;
		Connection con;
		PreparedStatement ps = null;

		float status;
		int nonattendlec;
		int totalsize;
		int attendsize;

		String accYear, monthFrom, monthTo, branch, division, batch, sem, subject, rollno;
		accYear = request.getParameter("accYear");
		System.out.println("accyear=" + accYear);
		monthFrom = request.getParameter("monthFrom");
		System.out.println("from=" + monthFrom);
		monthTo = request.getParameter("monthTo");
		System.out.println("To=" + monthTo);
		branch = request.getParameter("branch");
		System.out.println("branch=" + branch);
		division = request.getParameter("division");
		System.out.println("div=" + division);
		batch = request.getParameter("batch");
		System.out.println("batch=" + batch);
		sem = request.getParameter("sem");
		System.out.println("sem=" + sem);

		subject = request.getParameter("subject");
		System.out.println("subject=" + subject);
		rollno = request.getParameter("rollN0");
		System.out.println("rollno=" + rollno);

		PrintWriter out = response.getWriter();
		con = Conn.getCon();

		List<String> attend = new ArrayList<String>();
		List<String> total = new ArrayList<String>();

		if (accYear.equals("") || branch.equals("") || sem.equals("") || rollno.equals("") || subject.equals("")
				|| monthFrom.equals("") || monthTo.equals("") || division.equals("") || batch.equals("")) {
			request.setAttribute("msg", "Plz Fill All Field");
			RequestDispatcher rd2 = request.getRequestDispatcher("semPracticalAttendance.jsp");
			if (rd2 != null) {
				rd2.forward(request, response);
			}
		} else {
			try {
				String sql1 = "select distinct datetime from practicalattendance where accyear=? and month between ? and ? and branch=? and division=? and batch=? and sem=? and subject=? and rollno=?";
				ps = con.prepareStatement(sql1);
				ps.setString(1, accYear);
				ps.setString(2, monthFrom);
				ps.setString(3, monthTo);

				ps.setString(4, branch);
				ps.setString(5, division);
				ps.setString(6, batch);
				ps.setString(7, sem);
				ps.setString(8, subject);
				ps.setString(9, rollno);

				rs = ps.executeQuery();

				while (rs.next()) {
					// Add records into data list
					attend.add(rs.getString("datetime"));

				}

				String sql2 = "select distinct datetime from practicalattendance where accyear=? and month between ? and ? and branch=? and division=? and batch=? and sem=? and subject=?";
				ps = con.prepareStatement(sql2);
				ps.setString(1, accYear);
				ps.setString(2, monthFrom);
				ps.setString(3, monthTo);

				ps.setString(4, branch);
				ps.setString(5, division);
				ps.setString(6, batch);
				ps.setString(7, sem);
				ps.setString(8, subject);

				rs = ps.executeQuery();

				while (rs.next()) {
					// Add records into data list
					total.add(rs.getString("datetime"));

				}

				totalsize = total.size();
				attendsize = attend.size();
				if (attendsize > 0) {
					status = attendsize * 100 / totalsize;
				} else {
					status = 0;
				}
				nonattendlec = totalsize - attendsize;

				System.out.println("non attend =" + nonattendlec);
				System.out.println("status=" + status);
				System.out.println("total=" + total);
				System.out.println("attend=" + attend);

				request.setAttribute("sem", sem);
				request.setAttribute("accYear", accYear);
				request.setAttribute("branch", branch);
				request.setAttribute("subject", subject);
				request.setAttribute("monthFrom", monthFrom);
				request.setAttribute("monthTo", monthTo);

				request.setAttribute("division", division);
				request.setAttribute("batch", batch);
				request.setAttribute("rollNo", rollno);

				request.setAttribute("nonattendlec", nonattendlec);
				request.setAttribute("totlec", totalsize);
				request.setAttribute("attlec", attendsize);
				request.setAttribute("status", status);

				request.setAttribute("attenddatesem", attend);
				request.setAttribute("totaldatesem", total);
				
				if(totalsize<=0)
				{
					request.setAttribute("msg", "No Any Lecture For This Sem Check All MANDATORY FIELDS");
				}
				// Disptching request
				RequestDispatcher rd2 = request.getRequestDispatcher("semPracticalAttendance.jsp");
				if (rd2 != null) {
					rd2.forward(request, response);
				}

			} catch (IOException io) {
				RequestDispatcher rd2 = request.getRequestDispatcher("semPracticalAttendance.jsp");
				rd2.forward(request, response);
			} catch (Exception e) {
				out.println(e);
			}

		}

	}
}